// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: st2t_fpinfo_packet.proto

#ifndef PROTOBUF_st2t_5ffpinfo_5fpacket_2eproto__INCLUDED
#define PROTOBUF_st2t_5ffpinfo_5fpacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class st2t_fpinfo_packet;
class st2t_fpinfo_packetDefaultTypeInternal;
extern st2t_fpinfo_packetDefaultTypeInternal _st2t_fpinfo_packet_default_instance_;
class st2t_fpinfo_packet_forward_info;
class st2t_fpinfo_packet_forward_infoDefaultTypeInternal;
extern st2t_fpinfo_packet_forward_infoDefaultTypeInternal _st2t_fpinfo_packet_forward_info_default_instance_;

namespace protobuf_st2t_5ffpinfo_5fpacket_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_st2t_5ffpinfo_5fpacket_2eproto

// ===================================================================

class st2t_fpinfo_packet_forward_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:st2t_fpinfo_packet.forward_info) */ {
 public:
  st2t_fpinfo_packet_forward_info();
  virtual ~st2t_fpinfo_packet_forward_info();

  st2t_fpinfo_packet_forward_info(const st2t_fpinfo_packet_forward_info& from);

  inline st2t_fpinfo_packet_forward_info& operator=(const st2t_fpinfo_packet_forward_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const st2t_fpinfo_packet_forward_info& default_instance();

  static inline const st2t_fpinfo_packet_forward_info* internal_default_instance() {
    return reinterpret_cast<const st2t_fpinfo_packet_forward_info*>(
               &_st2t_fpinfo_packet_forward_info_default_instance_);
  }

  void Swap(st2t_fpinfo_packet_forward_info* other);

  // implements Message ----------------------------------------------

  inline st2t_fpinfo_packet_forward_info* New() const PROTOBUF_FINAL { return New(NULL); }

  st2t_fpinfo_packet_forward_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const st2t_fpinfo_packet_forward_info& from);
  void MergeFrom(const st2t_fpinfo_packet_forward_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(st2t_fpinfo_packet_forward_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 public_ip = 6;
  int public_ip_size() const;
  void clear_public_ip();
  static const int kPublicIpFieldNumber = 6;
  ::google::protobuf::uint32 public_ip(int index) const;
  void set_public_ip(int index, ::google::protobuf::uint32 value);
  void add_public_ip(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      public_ip() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_public_ip();

  // repeated uint32 private_ip = 7;
  int private_ip_size() const;
  void clear_private_ip();
  static const int kPrivateIpFieldNumber = 7;
  ::google::protobuf::uint32 private_ip(int index) const;
  void set_private_ip(int index, ::google::protobuf::uint32 value);
  void add_private_ip(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      private_ip() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_private_ip();

  // optional uint32 ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional uint32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional uint32 asn = 3;
  bool has_asn() const;
  void clear_asn();
  static const int kAsnFieldNumber = 3;
  ::google::protobuf::uint32 asn() const;
  void set_asn(::google::protobuf::uint32 value);

  // optional uint32 region = 4;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 4;
  ::google::protobuf::uint32 region() const;
  void set_region(::google::protobuf::uint32 value);

  // optional uint32 topo_level = 5;
  bool has_topo_level() const;
  void clear_topo_level();
  static const int kTopoLevelFieldNumber = 5;
  ::google::protobuf::uint32 topo_level() const;
  void set_topo_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:st2t_fpinfo_packet.forward_info)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();
  void set_has_asn();
  void clear_has_asn();
  void set_has_region();
  void clear_has_region();
  void set_has_topo_level();
  void clear_has_topo_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > public_ip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > private_ip_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 asn_;
  ::google::protobuf::uint32 region_;
  ::google::protobuf::uint32 topo_level_;
  friend struct  protobuf_st2t_5ffpinfo_5fpacket_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class st2t_fpinfo_packet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:st2t_fpinfo_packet) */ {
 public:
  st2t_fpinfo_packet();
  virtual ~st2t_fpinfo_packet();

  st2t_fpinfo_packet(const st2t_fpinfo_packet& from);

  inline st2t_fpinfo_packet& operator=(const st2t_fpinfo_packet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const st2t_fpinfo_packet& default_instance();

  static inline const st2t_fpinfo_packet* internal_default_instance() {
    return reinterpret_cast<const st2t_fpinfo_packet*>(
               &_st2t_fpinfo_packet_default_instance_);
  }

  void Swap(st2t_fpinfo_packet* other);

  // implements Message ----------------------------------------------

  inline st2t_fpinfo_packet* New() const PROTOBUF_FINAL { return New(NULL); }

  st2t_fpinfo_packet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const st2t_fpinfo_packet& from);
  void MergeFrom(const st2t_fpinfo_packet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(st2t_fpinfo_packet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef st2t_fpinfo_packet_forward_info forward_info;

  // accessors -------------------------------------------------------

  // repeated .st2t_fpinfo_packet.forward_info fi = 1;
  int fi_size() const;
  void clear_fi();
  static const int kFiFieldNumber = 1;
  const ::st2t_fpinfo_packet_forward_info& fi(int index) const;
  ::st2t_fpinfo_packet_forward_info* mutable_fi(int index);
  ::st2t_fpinfo_packet_forward_info* add_fi();
  ::google::protobuf::RepeatedPtrField< ::st2t_fpinfo_packet_forward_info >*
      mutable_fi();
  const ::google::protobuf::RepeatedPtrField< ::st2t_fpinfo_packet_forward_info >&
      fi() const;

  // @@protoc_insertion_point(class_scope:st2t_fpinfo_packet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::st2t_fpinfo_packet_forward_info > fi_;
  friend struct  protobuf_st2t_5ffpinfo_5fpacket_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// st2t_fpinfo_packet_forward_info

// optional uint32 ip = 1;
inline bool st2t_fpinfo_packet_forward_info::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void st2t_fpinfo_packet_forward_info::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void st2t_fpinfo_packet_forward_info::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void st2t_fpinfo_packet_forward_info::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 st2t_fpinfo_packet_forward_info::ip() const {
  // @@protoc_insertion_point(field_get:st2t_fpinfo_packet.forward_info.ip)
  return ip_;
}
inline void st2t_fpinfo_packet_forward_info::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:st2t_fpinfo_packet.forward_info.ip)
}

// optional uint32 port = 2;
inline bool st2t_fpinfo_packet_forward_info::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void st2t_fpinfo_packet_forward_info::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void st2t_fpinfo_packet_forward_info::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void st2t_fpinfo_packet_forward_info::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 st2t_fpinfo_packet_forward_info::port() const {
  // @@protoc_insertion_point(field_get:st2t_fpinfo_packet.forward_info.port)
  return port_;
}
inline void st2t_fpinfo_packet_forward_info::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:st2t_fpinfo_packet.forward_info.port)
}

// optional uint32 asn = 3;
inline bool st2t_fpinfo_packet_forward_info::has_asn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void st2t_fpinfo_packet_forward_info::set_has_asn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void st2t_fpinfo_packet_forward_info::clear_has_asn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void st2t_fpinfo_packet_forward_info::clear_asn() {
  asn_ = 0u;
  clear_has_asn();
}
inline ::google::protobuf::uint32 st2t_fpinfo_packet_forward_info::asn() const {
  // @@protoc_insertion_point(field_get:st2t_fpinfo_packet.forward_info.asn)
  return asn_;
}
inline void st2t_fpinfo_packet_forward_info::set_asn(::google::protobuf::uint32 value) {
  set_has_asn();
  asn_ = value;
  // @@protoc_insertion_point(field_set:st2t_fpinfo_packet.forward_info.asn)
}

// optional uint32 region = 4;
inline bool st2t_fpinfo_packet_forward_info::has_region() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void st2t_fpinfo_packet_forward_info::set_has_region() {
  _has_bits_[0] |= 0x00000008u;
}
inline void st2t_fpinfo_packet_forward_info::clear_has_region() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void st2t_fpinfo_packet_forward_info::clear_region() {
  region_ = 0u;
  clear_has_region();
}
inline ::google::protobuf::uint32 st2t_fpinfo_packet_forward_info::region() const {
  // @@protoc_insertion_point(field_get:st2t_fpinfo_packet.forward_info.region)
  return region_;
}
inline void st2t_fpinfo_packet_forward_info::set_region(::google::protobuf::uint32 value) {
  set_has_region();
  region_ = value;
  // @@protoc_insertion_point(field_set:st2t_fpinfo_packet.forward_info.region)
}

// optional uint32 topo_level = 5;
inline bool st2t_fpinfo_packet_forward_info::has_topo_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void st2t_fpinfo_packet_forward_info::set_has_topo_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void st2t_fpinfo_packet_forward_info::clear_has_topo_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void st2t_fpinfo_packet_forward_info::clear_topo_level() {
  topo_level_ = 0u;
  clear_has_topo_level();
}
inline ::google::protobuf::uint32 st2t_fpinfo_packet_forward_info::topo_level() const {
  // @@protoc_insertion_point(field_get:st2t_fpinfo_packet.forward_info.topo_level)
  return topo_level_;
}
inline void st2t_fpinfo_packet_forward_info::set_topo_level(::google::protobuf::uint32 value) {
  set_has_topo_level();
  topo_level_ = value;
  // @@protoc_insertion_point(field_set:st2t_fpinfo_packet.forward_info.topo_level)
}

// repeated uint32 public_ip = 6;
inline int st2t_fpinfo_packet_forward_info::public_ip_size() const {
  return public_ip_.size();
}
inline void st2t_fpinfo_packet_forward_info::clear_public_ip() {
  public_ip_.Clear();
}
inline ::google::protobuf::uint32 st2t_fpinfo_packet_forward_info::public_ip(int index) const {
  // @@protoc_insertion_point(field_get:st2t_fpinfo_packet.forward_info.public_ip)
  return public_ip_.Get(index);
}
inline void st2t_fpinfo_packet_forward_info::set_public_ip(int index, ::google::protobuf::uint32 value) {
  public_ip_.Set(index, value);
  // @@protoc_insertion_point(field_set:st2t_fpinfo_packet.forward_info.public_ip)
}
inline void st2t_fpinfo_packet_forward_info::add_public_ip(::google::protobuf::uint32 value) {
  public_ip_.Add(value);
  // @@protoc_insertion_point(field_add:st2t_fpinfo_packet.forward_info.public_ip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
st2t_fpinfo_packet_forward_info::public_ip() const {
  // @@protoc_insertion_point(field_list:st2t_fpinfo_packet.forward_info.public_ip)
  return public_ip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
st2t_fpinfo_packet_forward_info::mutable_public_ip() {
  // @@protoc_insertion_point(field_mutable_list:st2t_fpinfo_packet.forward_info.public_ip)
  return &public_ip_;
}

// repeated uint32 private_ip = 7;
inline int st2t_fpinfo_packet_forward_info::private_ip_size() const {
  return private_ip_.size();
}
inline void st2t_fpinfo_packet_forward_info::clear_private_ip() {
  private_ip_.Clear();
}
inline ::google::protobuf::uint32 st2t_fpinfo_packet_forward_info::private_ip(int index) const {
  // @@protoc_insertion_point(field_get:st2t_fpinfo_packet.forward_info.private_ip)
  return private_ip_.Get(index);
}
inline void st2t_fpinfo_packet_forward_info::set_private_ip(int index, ::google::protobuf::uint32 value) {
  private_ip_.Set(index, value);
  // @@protoc_insertion_point(field_set:st2t_fpinfo_packet.forward_info.private_ip)
}
inline void st2t_fpinfo_packet_forward_info::add_private_ip(::google::protobuf::uint32 value) {
  private_ip_.Add(value);
  // @@protoc_insertion_point(field_add:st2t_fpinfo_packet.forward_info.private_ip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
st2t_fpinfo_packet_forward_info::private_ip() const {
  // @@protoc_insertion_point(field_list:st2t_fpinfo_packet.forward_info.private_ip)
  return private_ip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
st2t_fpinfo_packet_forward_info::mutable_private_ip() {
  // @@protoc_insertion_point(field_mutable_list:st2t_fpinfo_packet.forward_info.private_ip)
  return &private_ip_;
}

// -------------------------------------------------------------------

// st2t_fpinfo_packet

// repeated .st2t_fpinfo_packet.forward_info fi = 1;
inline int st2t_fpinfo_packet::fi_size() const {
  return fi_.size();
}
inline void st2t_fpinfo_packet::clear_fi() {
  fi_.Clear();
}
inline const ::st2t_fpinfo_packet_forward_info& st2t_fpinfo_packet::fi(int index) const {
  // @@protoc_insertion_point(field_get:st2t_fpinfo_packet.fi)
  return fi_.Get(index);
}
inline ::st2t_fpinfo_packet_forward_info* st2t_fpinfo_packet::mutable_fi(int index) {
  // @@protoc_insertion_point(field_mutable:st2t_fpinfo_packet.fi)
  return fi_.Mutable(index);
}
inline ::st2t_fpinfo_packet_forward_info* st2t_fpinfo_packet::add_fi() {
  // @@protoc_insertion_point(field_add:st2t_fpinfo_packet.fi)
  return fi_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::st2t_fpinfo_packet_forward_info >*
st2t_fpinfo_packet::mutable_fi() {
  // @@protoc_insertion_point(field_mutable_list:st2t_fpinfo_packet.fi)
  return &fi_;
}
inline const ::google::protobuf::RepeatedPtrField< ::st2t_fpinfo_packet_forward_info >&
st2t_fpinfo_packet::fi() const {
  // @@protoc_insertion_point(field_list:st2t_fpinfo_packet.fi)
  return fi_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_st2t_5ffpinfo_5fpacket_2eproto__INCLUDED
