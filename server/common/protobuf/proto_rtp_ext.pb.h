// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_rtp_ext.proto

#ifndef PROTOBUF_proto_5frtp_5fext_2eproto__INCLUDED
#define PROTOBUF_proto_5frtp_5fext_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace live_stream_sdk {
class RtpD2pExtension;
class RtpD2pExtensionDefaultTypeInternal;
extern RtpD2pExtensionDefaultTypeInternal _RtpD2pExtension_default_instance_;
class RtpU2rExtension;
class RtpU2rExtensionDefaultTypeInternal;
extern RtpU2rExtensionDefaultTypeInternal _RtpU2rExtension_default_instance_;
}  // namespace live_stream_sdk

namespace live_stream_sdk {

namespace protobuf_proto_5frtp_5fext_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_proto_5frtp_5fext_2eproto

// ===================================================================

class RtpU2rExtension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:live_stream_sdk.RtpU2rExtension) */ {
 public:
  RtpU2rExtension();
  virtual ~RtpU2rExtension();

  RtpU2rExtension(const RtpU2rExtension& from);

  inline RtpU2rExtension& operator=(const RtpU2rExtension& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtpU2rExtension& default_instance();

  static inline const RtpU2rExtension* internal_default_instance() {
    return reinterpret_cast<const RtpU2rExtension*>(
               &_RtpU2rExtension_default_instance_);
  }

  void Swap(RtpU2rExtension* other);

  // implements Message ----------------------------------------------

  inline RtpU2rExtension* New() const PROTOBUF_FINAL { return New(NULL); }

  RtpU2rExtension* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RtpU2rExtension& from);
  void MergeFrom(const RtpU2rExtension& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RtpU2rExtension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string deviceID = 1;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // @@protoc_insertion_point(class_scope:live_stream_sdk.RtpU2rExtension)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  mutable int _cached_size_;
  friend struct  protobuf_proto_5frtp_5fext_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RtpD2pExtension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:live_stream_sdk.RtpD2pExtension) */ {
 public:
  RtpD2pExtension();
  virtual ~RtpD2pExtension();

  RtpD2pExtension(const RtpD2pExtension& from);

  inline RtpD2pExtension& operator=(const RtpD2pExtension& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RtpD2pExtension& default_instance();

  static inline const RtpD2pExtension* internal_default_instance() {
    return reinterpret_cast<const RtpD2pExtension*>(
               &_RtpD2pExtension_default_instance_);
  }

  void Swap(RtpD2pExtension* other);

  // implements Message ----------------------------------------------

  inline RtpD2pExtension* New() const PROTOBUF_FINAL { return New(NULL); }

  RtpD2pExtension* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RtpD2pExtension& from);
  void MergeFrom(const RtpD2pExtension& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RtpD2pExtension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string deviceID = 1;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // @@protoc_insertion_point(class_scope:live_stream_sdk.RtpD2pExtension)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  mutable int _cached_size_;
  friend struct  protobuf_proto_5frtp_5fext_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RtpU2rExtension

// string deviceID = 1;
inline void RtpU2rExtension::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RtpU2rExtension::deviceid() const {
  // @@protoc_insertion_point(field_get:live_stream_sdk.RtpU2rExtension.deviceID)
  return deviceid_.GetNoArena();
}
inline void RtpU2rExtension::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:live_stream_sdk.RtpU2rExtension.deviceID)
}
#if LANG_CXX11
inline void RtpU2rExtension::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:live_stream_sdk.RtpU2rExtension.deviceID)
}
#endif
inline void RtpU2rExtension::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:live_stream_sdk.RtpU2rExtension.deviceID)
}
inline void RtpU2rExtension::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:live_stream_sdk.RtpU2rExtension.deviceID)
}
inline ::std::string* RtpU2rExtension::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:live_stream_sdk.RtpU2rExtension.deviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RtpU2rExtension::release_deviceid() {
  // @@protoc_insertion_point(field_release:live_stream_sdk.RtpU2rExtension.deviceID)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RtpU2rExtension::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:live_stream_sdk.RtpU2rExtension.deviceID)
}

// -------------------------------------------------------------------

// RtpD2pExtension

// string deviceID = 1;
inline void RtpD2pExtension::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RtpD2pExtension::deviceid() const {
  // @@protoc_insertion_point(field_get:live_stream_sdk.RtpD2pExtension.deviceID)
  return deviceid_.GetNoArena();
}
inline void RtpD2pExtension::set_deviceid(const ::std::string& value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:live_stream_sdk.RtpD2pExtension.deviceID)
}
#if LANG_CXX11
inline void RtpD2pExtension::set_deviceid(::std::string&& value) {
  
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:live_stream_sdk.RtpD2pExtension.deviceID)
}
#endif
inline void RtpD2pExtension::set_deviceid(const char* value) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:live_stream_sdk.RtpD2pExtension.deviceID)
}
inline void RtpD2pExtension::set_deviceid(const char* value, size_t size) {
  
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:live_stream_sdk.RtpD2pExtension.deviceID)
}
inline ::std::string* RtpD2pExtension::mutable_deviceid() {
  
  // @@protoc_insertion_point(field_mutable:live_stream_sdk.RtpD2pExtension.deviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RtpD2pExtension::release_deviceid() {
  // @@protoc_insertion_point(field_release:live_stream_sdk.RtpD2pExtension.deviceID)
  
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RtpD2pExtension::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    
  } else {
    
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:live_stream_sdk.RtpD2pExtension.deviceID)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace live_stream_sdk

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5frtp_5fext_2eproto__INCLUDED
